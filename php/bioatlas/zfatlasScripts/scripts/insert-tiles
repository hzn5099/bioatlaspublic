#!/usr/bin/php
<?php
/*
	(This is intended to be run from the command-line: php -f insert-tiles.php)

	Using stored procedures and file streams, this *should* be a faster implementation than the original.

	It does pause at some points; I'm not sure why.  Possibly the disk being overrun by data and needing to catch up?
		If so, that's a good thing 'cause the old script never did that.
		Scratch that, the original script seems to be doing the same thing today, too.
	Lots faster... for 4GB of tiles 2:46 vs 11:48

	Accounting for multiple identifiers:
	- get the id/identifier relationship(s)
	- if multiple exist, take the one with a zero count for tiles
	- otherwise, skip those tiles (and print a message)

	  In tile reading script, execute a query to identify the id-identifier
	  relationship and maintain a local hash; if multiple identifiers exist,
	  take the one with no tiles; if none match these requirements, skip them.

*/

ini_set('memory_limit', -1);

require '/data/php/bioatlas/bioatlas/zfatlasDump/config.php';

// connect to database
    $zfatlas = mysqli_init();
    mysqli_options($zfatlas, MYSQLI_OPT_SSL_VERIFY_SERVER_CERT, true);
    mysqli_ssl_set($zfatlas, null, null, $db_ssl_ca, null , null);
    mysqli_real_connect($zfatlas, $zf_mysql_host, $zf_mysql_admin, $zf_mysql_admin_pass, $zf_mysql_db, $zf_mysql_port, null, 64);

	if ($zfatlas->connect_errno)
		die(sprintf("Error connecting to database: %s\n", $zfatlas->connect_error));

// prepare statements

	$select_id		= $zfatlas->prepare('SELECT slide_id FROM virtualslides WHERE identifier = ? AND NOT EXISTS (SELECT 1 FROM virtualslide_tiles WHERE virtualslide_tiles.slide_id = virtualslides.slide_id) ORDER BY slide_id');
	$update_ts		= $zfatlas->prepare('UPDATE virtualslides SET last_modified=NOW() WHERE slide_id = ?');
	$insert_tile	= $zfatlas->prepare('INSERT IGNORE INTO virtualslide_tiles VALUES (?,?,?,?)');

// get image filenames

	echo 'Reading tile filenames... ';
	$jpeg_files = glob('/tmp/tiles/*.jpg', GLOB_NOSORT);
	$total = count($jpeg_files);
	$count = 0;
	echo "found $total tiles.\n";

// initialize variables

	$ids = array();
	$id = 0;
	$null = NULL; // placeholder for prepared statement binding; it has to be NULL, but it can't be a literal.

// ----------------------------------------------------------------------------
function getId($identifier) {
// ----------------------------------------------------------------------------

	global $select_id, $select_empty_id, $ids;

	if (!array_key_exists($identifier, $ids)) {

		$select_id->bind_param('s', $identifier);
		$select_id->execute();
		$select_id->store_result();
		$select_id->bind_result($id);
		$select_id->fetch();

		if ($select_id->errno) {
			printf("\n\tError looking up id for '%s': %s\n", $identifier, $select_id->error);
			$id = false;
		} else if (!$id) {
			printf("\n\tNo (empty) id found for '%s'\n", $identifier);
			$id = false;
		} else if ($select_id->num_rows > 1) {
			// with the new select_id query, this could also be considered an error
			// as it would be unlikely to have more than one empty slide_id at a time.
			printf("\n\tMultiple ids for '%s'; using first (%d)\n", $identifier, $id);
		}

		$select_id->free_result();

		$ids[$identifier] = $id;
	}

	return $ids[$identifier];
}


// "main()"
echo 'Inserting tiles into database... ';
foreach ($jpeg_files as $file) {

	// Tile image
	if (3 == count(@list($identifier, $z, $i) = explode(',', basename($file, '.jpg')))) {

		$id = getId($identifier);
		if (!$id) continue;

		// Insert tile from image stream
		$image = fopen($file, 'r');
		if (!$image)
			die("Failed to open '$file' for reading\n");
		$insert_tile->bind_param('iiib', $id, $z, $i, $null);
		while (!feof($image))
			$insert_tile->send_long_data(3, fread($image, 16384));
		fclose($image);
		$insert_tile->execute();
		$insert_tile->free_result();


		if ($insert_tile->errno) {

			die(sprintf("Error inserting tile while executing statement: %s\n", $insert_tile->error));

		} elseif ($i == 0 && $z == 0) {

			$update_ts->bind_param('i', $id);
			$update_ts->execute();
			$update_ts->errno and printf("Error updating timestamp: %s\n", $update_ts->error);
			$update_ts->free_result();

		}

	// Preview image
	} elseif (substr($file, -12) == '-preview.jpg') {

		$id = getId(basename($file, '-preview.jpg'));
		if (!$id) continue;

		rename($file, sprintf('/data/php/bioatlas/bioatlas/zfatlasDump/labels/thumbnails/preview/%010d.jpg', $id));

	}

	// Progress indicator
	if ($count++ % 1000) printf("\rInserting tiles into database... %3.2f%%", 100*$count/$total);
}

$select_id->close();
$update_ts->close();
$insert_tile->close();

// this isn't entirely accurate due to counting preview thumbnails
printf("\nInserted %d tiles.\n", $count);
exit(0);
