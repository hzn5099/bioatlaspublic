#!/usr/bin/perl -w

use strict;
use POSIX;
use Getopt::Std;
use File::Basename;

my (%option,$width,$height,$N,$n,$basename);
my $untiled_levels = 2;
getopt('n:a:',\%option);

die "Option -n or -a is mandatory.\n" unless $option{a} or $option{n};

my $insertf = "INSERT INTO virtualslide_levels SELECT slide_id, %d, %6d, %6d, %4d, %4d FROM virtualslides WHERE identifier = '%s';\n";
for (@ARGV) {

	# ($width, $height) = split /\s+/, `identify -format '%w %h' "$_"[0] 2>/dev/null`;
	($width, $height) = `vipsheader $_ 2>/dev/null` =~ /(\d+)x(\d+)/;
	if (!$width || !$height) {
		die "Failed to get dimensions for $_!\n";
	}

	$N = $option{n} || ceil( log ($width*$height/$option{a}) / log 4 ) + 1;
	$basename = basename($_, (".tif", ".tiff", ".svs", ".v"));

	# print "-- $basename\n";
	for ($n = 0; $n < $N; $n++) {
		if ($n < $N - $untiled_levels) {
			printf $insertf,  $n, $width, $height,    400,     300, $basename;
		} else {
			printf $insertf,  $n, $width, $height, $width, $height, $basename;
		}
		$width  = round($width/2);
		$height = round($height/2);
	}
}
exit(0);

sub round {return ($_[0] - int $_[0]) >= 0.5 ? 1 + int $_[0] : int $_[0] }
